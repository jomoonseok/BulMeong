<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.bulmeong.users.mapper.UsersMapper">

	<!-- 아이디 중복체크1, 이메일 중복체크, 로그인, 로그인 유지를 이용한 로그인, 마이페이지 가기 전 비번 확인, 네이버로그인으로 가입한 회원인지 확인, 아이디 찾기, 비밀번호 찾기 -->
	<select id="selectUserByMap" parameterType="Map" resultType="UsersDTO">
		SELECT USERS_NO, ID, NICKNAME, PW, NAME, MOBILE, GENDER, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, JOIN_DATE, AGREE_CODE, SNS_TYPE, SESSION_ID, SESSION_LIMIT_DATE, EMAIL, AGE, PROFILE_IMAGE, PW_MODIFY_DATE, INFO_MODIFY_DATE
		  FROM USERS
		 <where>
			 <if test="id != null">
			 	ID = #{id}
			 </if>
			 <if test="pw != null">
			 	AND PW = #{pw}
			 </if>
			 <if test="nickname != null">
			 	AND NICKNAME = #{nickname}
			 </if>
			 <if test="email != null">
			 	AND EMAIL = #{email}
			 </if>
			 <if test="sessionId != null">
			 	AND SESSION_ID = #{sessionId}
			 	AND 1 = (SESSION_LIMIT_DATE > DATE_FORMAT(NOW(), '%Y/%m/%d'))
			 </if>
			 <if test="name != null">
			 	AND NAME = #{name}
			 </if>
		 </where>
	</select>
	
	<!-- 아이디 중복체크2 휴면유저 -->
	<select id="selectSleepUserByMap" parameterType="Map" resultType="SleepUsersDTO">
		SELECT USERS_NO, ID, NICKNAME, PW, NAME, MOBILE, GENDER, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, JOIN_DATE, AGREE_CODE, SNS_TYPE, SESSION_ID, SESSION_LIMIT_DATE, EMAIL, SLEEP_DATE, AGE, PROFILE_IMAGE, LAST_LOGIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE
		  FROM USERS_SLEEP
		 <where>
			 <if test="id != null">
			 	ID = #{id}
			 </if>
			 <if test="nickname != null">
			 	AND NICKNAME = #{nickname}
			 </if>
			 <if test="email != null">
			 	AND EMAIL = #{email}
			 </if>
		 </where>
	</select>
	
	<!-- 아이디 중복체크3 탈퇴유저 -->
	<select id="selectRetireUserById" parameterType="String" resultType="RetireUsersDTO">
		SELECT ID
		  FROM USERS_RETIRE
		 WHERE ID = #{id}
	</select>
	
	<!-- 일반회원가입 -->
	<insert id="insertUser" parameterType="UsersDTO" useGeneratedKeys="true" keyProperty="usersNo">
		INSERT INTO USERS
			(ID, NICKNAME, PW, NAME, MOBILE, GENDER, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, JOIN_DATE, AGREE_CODE, SNS_TYPE, SESSION_ID, SESSION_LIMIT_DATE, EMAIL, AGE, PW_MODIFY_DATE, INFO_MODIFY_DATE)
		VALUES
			(#{id}, #{nickname}, #{pw}, #{name}, #{mobile}, #{gender}, #{birthYear}, #{birthDay}, #{postCode}, #{roadAddress}, #{jibunAddress}, #{detailAddress}, #{extraAddress}, DATE_FORMAT(NOW(), '%y/%m/%d'), #{agreeCode}, NULL, NULL, NULL, #{email}, NULL, DATE_FORMAT(NOW(), '%y/%m/%d'), DATE_FORMAT(NOW(), '%y/%m/%d'))
	</insert>
	
	<!-- 로그인 기록(ACCESS_LOG) 남기기 -->
	<update id="updateAccessLog" parameterType="String">
		UPDATE USERS_ACCESS
		   SET LAST_LOGIN_DATE = DATE_FORMAT(NOW(), '%y/%m/%d')
		 WHERE ID = #{id}
	</update>
	<insert id="insertAccessLog" parameterType="String">
		INSERT INTO USERS_ACCESS
			(ID, LAST_LOGIN_DATE)
		VALUES
			(#{id}, DATE_FORMAT(NOW(), '%y/%m/%d'))
	</insert>
	
	<!-- 회원탈퇴1 : USERS, USERS_ACCESS 테이블에서 제거 -->
	<delete id="deleteUserAccess" parameterType="String">
		DELETE
		  FROM USERS_ACCESS
		 WHERE ID = #{id}
	</delete>
	<delete id="deleteUser" parameterType="String">
		DELETE
		  FROM USERS
		 WHERE ID = #{id}
	</delete>
	
	<!-- 회원탈퇴2 : RETIRE_USERS 테이블에 추가 -->
	<insert id="insertRetireUser" parameterType="RetireUsersDTO">
		INSERT INTO USERS_RETIRE
			(ID, JOIN_DATE, RETIRE_DATE)
		VALUES
			(#{id}, #{joinDate}, DATE_FORMAT(NOW(), '%y/%m/%d'))
	</insert>
	
	<!-- 로그인 유지를 위한 SESSION_ID/SESSION_LIMIT_DATE 업데이트 -->
	<update id="updateSessionInfo" parameterType="UsersDTO">
		UPDATE USERS
		   SET SESSION_ID = #{sessionId}
		     , SESSION_LIMIT_DATE = #{sessionLimitDate}
		 WHERE ID = #{id}
	</update>
	
	<!-- 마이페이지 : 비밀번호 수정, 임시비밀번호로 수정 -->
	<update id="updateUserPassword" parameterType="UsersDTO">
		UPDATE USERS
		   SET PW = #{pw}
		     , PW_MODIFY_DATE = DATE_FORMAT(NOW(), '%y/%m/%d')
		 WHERE ID = #{id}
	</update>
	
	<!-- 회원정보수정 -->
	<update id="updateUser" parameterType="UsersDTO">
		UPDATE USERS
		  SET NAME = #{name}
		    , GENDER = #{gender}
		    , EMAIL = #{email}
		    , MOBILE = #{mobile}
		    , BIRTH_YEAR = #{birthYear}
		    , BIRTH_DAY = #{birthDay}
		    , POSTCODE = #{postCode}
		    , ROAD_ADDRESS = #{roadAddress}
		    , JIBUN_ADDRESS = #{jibunAddress}
		    , DETAIL_ADDRESS = #{detailAddress}
		    , EXTRA_ADDRESS = #{extraAddress}
		    , AGREE_CODE = #{agreeCode}
		    , INFO_MODIFY_DATE = DATE_FORMAT(NOW(), '%y/%m/%d')
		WHERE ID = #{id}
	</update>
	
	<!-- 휴면처리1 : 1년 이상 로그인 기록이 없으면 휴면테이블에 저장 -->
	<insert id="insertSleepUser">
		INSERT INTO USERS_SLEEP(USERS_NO, ID, NICKNAME, PW, NAME, MOBILE, GENDER, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, JOIN_DATE, AGREE_CODE, SNS_TYPE, EMAIL, SLEEP_DATE, AGE, PROFILE_IMAGE, LAST_LOGIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE)
			(SELECT U.USERS_NO, U.ID, U.NICKNAME, U.PW, U.NAME, U.MOBILE, U.GENDER, U.BIRTH_YEAR, U.BIRTH_DAY, U.POSTCODE, U.ROAD_ADDRESS, U.JIBUN_ADDRESS, U.DETAIL_ADDRESS, U.EXTRA_ADDRESS, U.JOIN_DATE, U.AGREE_CODE, U.SNS_TYPE, U.EMAIL, DATE_FORMAT(NOW(), '%y/%m/%d'), U.AGE, U.PROFILE_IMAGE, A.LAST_LOGIN_DATE, U.PW_MODIFY_DATE, U.INFO_MODIFY_DATE
			   FROM USERS U LEFT OUTER JOIN USERS_ACCESS A
                 ON U.ID = A.ID
			  WHERE DATEDIFF(DATE_FORMAT(NOW(), '%y/%m/%d'), A.LAST_LOGIN_DATE) >= 12
			     OR (DATEDIFF(DATE_FORMAT(NOW(), '%y/%m/%d'), U.JOIN_DATE) >= 12 AND A.LAST_LOGIN_DATE IS NULL))
	</insert>
	
	<!-- 휴면처리2 : 1년 이상 로그인 기록이 없으면 회원테이블에서 삭제 -->
	<delete id="deleteUserForSleep">
		DELETE
		  FROM USERS
		 WHERE ID = (SELECT  TMP_ID
		               FROM (SELECT U.ID TMP_ID
							   FROM USERS U LEFT OUTER JOIN USERS_ACCESS A
								 ON U.ID = A.ID
							  WHERE DATEDIFF(DATE_FORMAT(NOW(), '%y/%m/%d'), A.LAST_LOGIN_DATE) >= 365
							     OR (DATEDIFF(DATE_FORMAT(NOW(), '%y/%m/%d'), U.JOIN_DATE) >= 12 AND A.LAST_LOGIN_DATE IS NULL)) A)
	</delete>
	
	<!-- 로그인 이전에 휴면회원인지 확인 -->
	<select id="selectSleepUserById" parameterType="String" resultType="SleepUsersDTO">
		SELECT ID, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE
		  FROM USERS_SLEEP
		 WHERE ID = #{id}
	</select>
	
	<!-- 휴면복원1 : 복원할 회원을 USERS 테이블에 삽입 -->
	<insert id="insertRestoreUser" parameterType="String">
		INSERT INTO USERS(USERS_NO, ID, NICKNAME, PW, NAME, MOBILE, GENDER, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, JOIN_DATE, AGREE_CODE, SNS_TYPE, EMAIL, AGE, PROFILE_IMAGE, PW_MODIFY_DATE, INFO_MODIFY_DATE)
			(SELECT USERS_NO, ID, NICKNAME, PW, NAME, MOBILE, GENDER, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, JOIN_DATE, AGREE_CODE, SNS_TYPE, EMAIL, AGE, PROFILE_IMAGE, PW_MODIFY_DATE, INFO_MODIFY_DATE
			   FROM SLEEP_USERS
			  WHERE ID = #{id})
	</insert>
	
	<!-- 휴면복원2 : 복원할 회원을 SLEEP_USERS 테이블에서 삭제 -->
	<delete id="deleteSleepUser" parameterType="String">
		DELETE
		  FROM SLEEP_USERS
		 WHERE ID = #{id}
	</delete>
	
</mapper>